{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../Header.svelte",
    "../../Keyboard.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import keys from './data/keys';\n    import Header from './UI/Header.svelte';\n    import Keyboard from './UI/Keyboard.svelte';\n</script>\n\n\n<Header/>\n<main>\n\t<Keyboard keys={keys} />\n</main>\n\n<style>\n\tmain {\n        padding: 0 24px 0 24px;\n        width:100%;\n        max-width: 1280px;\n    }\n</style>",
    "<header>\n    <h1>What the Chord?</h1>\n    <p>Learn Piano Chords!</p>\n</header>\n\n\n<style>\n    header {\n        width:100%;\n        height: 120px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        background: #000;\n        color: #fff;\n        border-bottom: 1px solid #fff;\n        font-family: 'noto';\n        padding: 0 24px;\n        text-transform: uppercase;\n    }\n\n    header h1 {\n        font-size: 3em;\n        margin: 0;\n        padding:0;\n    }\n\n    header p {\n        font-size: 1em;\n    }\n</style>",
    "<script>\n    import {onMount} from 'svelte';\n    import {cubicInOut} from 'svelte/easing';\n    import {scale} from 'svelte/transition';\n    import chords from '../data/chords';\n    import options from '../data/options';\n    export let keys;\n    let player;\n    let sound = null;\n    let chord = [];\n    let outputChord = null;\n    let key = null;\n    let playChord = null;\n    let selectedKey = '';\n    let selectedType = '';\n    let inversion = 0;\n\n\n    const setKey = k => {\n        const selected = keys.findIndex(ky => ky.id === k);\n        keys[selected].active = !keys[selected].active;\n        key = keys[selected];\n        const audio = new Audio(key.sound)\n        if(key.active) {\n            audio.play();\n            chord.push(key);\n        } else {\n            const index = chord.findIndex(c => c.id === key.id)\n            chord.splice(index, 1);\n        }\n        analyseChord(chord);\n        playChord = chord;\n    }\n\n    const analyseChord = ch => {\n        outputChord = null; // reset output chord\n        let chrd = [...ch]; // copy chord\n        chrd.sort((a,b) => a.id > b.id); // sort by id\n        let notes = chrd.map(i => i.name); // extract notes\n        notes = [...new Set(notes)];    // remove duplicates\n        chords.forEach((chd, i) => { // loop through chords\n            const {data} = chd // extract variations\n            const found = data.find(i => JSON.stringify(i) == JSON.stringify(notes)) // find matches\n            if(found) {\n                outputChord = chords[i].name; // set chord output name\n            }\n        })\n    }\n\n    const play = () => {\n        if(playChord) {\n            playChord.forEach((el, i) => {\n                i = new Audio(el.sound)\n                i.play()\n            });\n        }\n    }\n\n    const clear = () => {\n        const ks = [...keys];\n        ks.forEach(k => {\n            k.active = false;\n        });\n        chord = [];\n        outputChord = null;\n        key = null;\n        keys = ks;\n    }\n\n    const reset = () => {\n        clear();\n        selectedKey = '';\n        selectedType = '';\n    }\n\n    const chooseChord = (inv) => {\n        clear()\n        if(selectedKey && selectedType) {\n            if(selectedKey.length > 1) { // remove alias\n                selectedKey = selectedKey.substr(0,2)\n            }\n            let ks = [...keys]; // copy keys\n            const selected = selectedKey + ' ' + selectedType; // concat key and type\n            const found = chords.find(ch => ch.name.includes(selected)); //find the chord\n            let notes = found.data[inv]; // create notes array\n            notes.forEach((note, i) => { // loop through notes and assign key\n                const fnd = ks.filter(k => k.name === note)\n                if(i === 0) {\n                    fnd[0].active = true;\n                    chord.push(fnd[0])\n                } else {\n                    if(chord[0].id < fnd[0].id) {\n                        fnd[0].active = true;\n                        chord.push(fnd[0]);\n                    } else {\n                        fnd[1].active = true;\n                        chord.push(fnd[1])\n                    }\n                }\n            })\n            keys = ks; // replace keys with copied\n            playChord = chord; // set chord\n            play() // play chord\n            analyseChord(chord); // pass chord to analyse function\n        }\n    }\n\n    // preload audio\n    onMount(() => {\n        const sounds = keys.map(i => i.sound);\n        sounds.forEach((sound, i) => {\n            new Audio(sound);\n        });\n    })\n</script>\n\n<div class=\"chord\">\n    {#if outputChord}\n    <h3 transition:scale={{duration: 300, easing: cubicInOut}}>{outputChord}</h3>\n    <button on:click={play} transition:scale={{duration: 300, easing: cubicInOut}}>Play</button>\n    {/if}\n</div>\n\n\n\n<div class=\"keyboard\">\n    {#each keys as key}\n    <div class=\"keyboard__key {key.active ? 'keyboard__key--active' : ''} {key.class === 'black' ? 'keyboard__key--black' : ''} \" data-name=\"{key.name}\" data-alt=\"{key.alt}\" on:click={() => setKey(key.id)} >\n    </div>\n    {/each}\n</div>\n\n<div class=\"controls\">\n    <div>\n        <select bind:value={selectedKey} on:blur={() => chooseChord(inversion)}>\n            <option value=\"\">-- Key --</option>\n            {#each options[0].keys as key}\n                <option value=\"{key}\">{key}</option>\n            {/each}\n        </select>\n        <select bind:value={selectedType} disabled={selectedKey === ''} on:blur={() => chooseChord(inversion)}>\n            <option value=\"\">-- Type --</option>\n            {#each options[1].types as type}\n                <option value=\"{type}\">{type}</option>\n            {/each}\n        </select>\n    </div>\n    <button on:click={reset}>Clear Keys</button>\n</div>\n\n\n<style>\n    .keyboard {\n        display: flex;\n        height: 301px;\n        margin: 10px auto 0 auto;\n        justify-content: center;\n        box-sizing: border-box;\n        margin-bottom: 50px;\n    }\n\n    .keyboard__key {\n        height: 180px;\n        border-right:2px solid #000;\n        border-left:2px solid #000;\n        border-top: 1px solid #000;\n        width: 83px;\n        height: 300px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 1.6em;\n        text-align: center;\n        font-family: 'noto';\n        position: relative;\n        cursor: pointer;\n        border-bottom: 1px solid #000;\n        border-radius: 0 0 6px 6px;\n        background: #fff;\n        transition: background .1s;\n    }\n\n    .keyboard__key::after {\n        content: attr(data-name);\n        position: absolute;\n        bottom: 20px;\n        display: block;\n    }\n\n    .keyboard__key--black {\n        width:0px;\n        height: 0px;\n        border: none;\n    }\n\n    .keyboard__key--black:after {\n        content: attr(data-name) '' attr(data-alt);\n        position: absolute;\n        word-break: break-all;\n        top: 1px;\n        display: flex;\n        justify-content: center;\n        align-items: flex-end;\n        padding-bottom: 20px;\n        background: #000;\n        color:#fff;\n        height: 170px;\n        width: 60px;\n        z-index: 2;\n        padding:8px;\n        box-sizing: border-box;\n        border: 4px solid #000;\n        border-top: none;\n        box-sizing: border-box;\n        border-radius: 0 0 6px 6px;\n        transition: background .1s;\n    }\n\n    .keyboard__key--active {\n        background: #f1eb93;\n    }\n\n    .keyboard__key--active.keyboard__key--black:after{\n        background: #f1eb93;\n        color: #000;\n    }\n\n    .chord {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width:100%;\n        height: 150px;\n        font-size: 3em;\n        font-family: 'noto';\n        color:#fff;\n    }\n\n    .chord button {\n        cursor: pointer;\n        margin-left: 10px;\n        position: relative;\n        border: 3px solid #fff;\n        color:#000;\n        width:50px;\n        height: 50px;\n        background: transparent;\n        border-radius: 50%;\n        transition: border .5s;\n    }\n\n    .chord button:after {\n        content: '';\n        position: absolute;\n        top:50%;\n        left: 50%;\n        transform: translateX(-40%) translateY(-50%);\n        width:20px;\n        height: 20px;\n        background: #fff;\n        clip-path: polygon(0 0, 0% 100%, 100% 50%);\n        transition: background .5s;\n    }\n\n    .chord button:hover {\n        border-color: #f1eb93;\n    }\n\n    .chord button:hover:after {\n        background: #f1eb93;\n    }\n\n    .controls {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 50px;\n    }\n\n    .controls button {\n        color: #fff;\n        font-size: 1em;\n        cursor: pointer;\n        border: 1px solid #fff;\n        background: transparent;\n        padding: 7px 12px;\n        border-radius: 6px;\n        margin-right: 4px;\n        transition: all .3s;\n    }\n\n    .controls button:hover {\n        color:#f1eb93;\n        border-color: #f1eb93;\n    }\n\n    .controls button:active {\n        transform: scale(0.92)\n    }\n\n    .controls select {\n        font-size: 1em;\n        -webkit-appearance: none;\n        background: transparent;\n        border: 1px solid #fff;\n        color: #fff;\n        text-align: center;\n        margin-right: 12px;\n        padding: 7px 12px;\n        border-radius: 6px;\n        transition: all .3s;\n    }\n\n    .controls select:first-of-type {\n        width:100px;\n    }\n\n    .controls select:disabled {\n        border-color: #777;\n        color: #777;\n    }\n</style>"
  ],
  "names": [],
  "mappings": "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"
}